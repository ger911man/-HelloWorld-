
Road To Automation

    Home
    Sikuli
    SoapUI
    Mobile Automation
    Webdriver
    QTP
    Load Runner
    TestNG & Junit
    Jmeter

Road to setup and create first Appium Webdriver android script in Java
About Appium:
Appium is open source automation tool for iOS and android application supported by Sauce Lab. It is cross platform, supported Native, Hybrid iOS and android application. At backend it uses webdriver JSON wire protocol to communicate with iOS and android applications.
Appium supported many languages like Webdriver. You can write your test scripts any language that has selenium client library.
Appium support UIAutomator framework for ios and android library (For newer Api) and use selendroid for older android platform.
In this post I will show you how to setup and create Appium android script in java language.

Prerequisite:
1. JDK should be installed and java home path setup in your machine.
2. Android SDK should be installed on your machine and android path should be setup in your machine
3. Appium for window download from: download
4. Selenium jar file from: download
5. Eclipse.

Steps to create and run android test script:
1. Go to Appium downloaded package unzip and click on “Appium.exe”. Appium server console will be open like below:

2. You can change IP address and port, but keep it as a default.
3. Click on Launch button to run appium server you should see appium server running window like below

4. Launch emulator or connect device to the machine. Run adb command to check device is connected to your machine.
5. Below is sample code of webdriver in java for Appium in TestNg framework.

?
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
	
package com.test;
 
import java.io.File;
import java.net.URL;
import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.Capabilities;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.HasTouchScreen;
import org.openqa.selenium.interactions.TouchScreen;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteTouchScreen;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
 
public class AppiumTest {
  
    private WebDriver driver;
 
    @BeforeMethod
    public void setUp() throws Exception {
      
        // set up appium
        File appDir = new File("{pathApk file}");
        File app = new File(appDir, "{APK file Name}"); //my case “demo1.apk”
        DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setCapability("device","Android");
        capabilities.setCapability(CapabilityType.BROWSER_NAME,  "");
        capabilities.setCapability(CapabilityType.VERSION, "4.2");
        capabilities.setCapability(CapabilityType.PLATFORM, "WINDOW");
        capabilities.setCapability("app", app.getAbsolutePath());
        capabilities.setCapability("app-package", "{app package name}");  //my case com.gorillalogic.monkeytalk.demo1
        capabilities.setCapability("app-activity", ".{main activity class}");  //my case RootActivity
        driver = new RemoteWebDriver(new URL("http://127.0.0.1:4723/wd/hub"), capabilities);
        
    }
 
    @AfterMethod
    public void tearDown() throws Exception {
        driver.quit();
    }
     
    @Test
    public void loginTest() throws InterruptedException
    {    
     List<webelement> textFieldsList = driver.findElements(By.className("android.widget.EditText"));
        int size = textFieldsList.size();
 
        textFieldsList.get(0).sendKeys("Admin");
        textFieldsList.get(1).sendKeys("Admin");
        driver.findElements(By.xpath("android.widget.Button")).get(1).click();
        WebElement logout = driver.findElement(By.name("LOGOUT"));
        String logOut = logout.getText();
        System.out.println(logOut);
        logout.click();
    }
     
    @Test
    public void formTest() throws InterruptedException
    {    
     List<webelement> textFieldsList = driver.findElements(By.className("android.widget.RelativeLayout"));
        textFieldsList.get(2).click();
         
        driver.findElement(By.className("android.widget.Spinner")).click();       
        List<webelement> listsDropDown = driver.findElements(By.className("android.widget.CheckedTextView"));
        for(WebElement listdropdown: listsDropDown){
         String list = listdropdown.getText();       
         if(list.equals("Oxygen")){
          listdropdown.click();
         }
        }
         
        //click on check box
        WebElement checkBox = driver.findElement(By.className("android.widget.CheckBox"));       
        if(checkBox.isSelected()){
         checkBox.click();
        }
         
        //radio button
        driver.findElements(By.className("android.widget.RadioButton")).get(1).click();     
        
    }     
    
}
</webelement></webelement></webelement>
6. In above example I have taken demo application from monkey talk, you can download from there or chose your application. Appium automatic install application in emulator or devices when run test scripts. Hope this will help for you.
Related Posts:

Road to find android application el...
Email ThisBlogThis!Share to TwitterShare to FacebookShare to Pinterest
15 comments:

    nishanth ravi13 February 2014 at 18:31

    Hi,

    i have tried the following steps which u have mentioned above in your post.But still i cant able to run the file.

    In my scenario i have tested with JUnit framework.


    Code:


    import java.io.File;
    import java.net.MalformedURLException;
    import java.net.URL;
    import java.util.concurrent.TimeUnit;

    import org.junit.After;
    import org.junit.Before;
    import org.junit.Test;
    import org.openqa.selenium.By;
    import org.openqa.selenium.WebDriver;
    import org.openqa.selenium.remote.CapabilityType;
    import org.openqa.selenium.remote.DesiredCapabilities;
    import org.openqa.selenium.remote.RemoteWebDriver;
    import org.openqa.selenium.support.ui.ExpectedConditions;
    import org.openqa.selenium.support.ui.WebDriverWait;

    public class androidExample {


    WebDriver driver = null;

    @Before
    public void setup() throws Exception{
    File appDir = new File("D:\\apk\\");
    File app = new File(appDir, "Flipkart.apk");
    DesiredCapabilities capabilities = new DesiredCapabilities();
    capabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);
    capabilities.setCapability("device","Android");
    //capabilities.setCapability(CapabilityType.BROWSER_NAME, "Android");
    capabilities.setCapability("device ID", "emulator-5554");
    capabilities.setCapability(CapabilityType.VERSION, "4.2.2");
    capabilities.setCapability(CapabilityType.PLATFORM, "WINDOWS");
    capabilities.setCapability("app", app.getAbsolutePath()); //app.getAbsolutePath()
    // Here we mention the app's package name, to find the package name we have to convert .apk file into java class files
    capabilities.setCapability("app-package","com.flipkart.android");
    //Here we mention the activity name, which is invoked initially as app's first page.
    capabilities.setCapability("app-activity","LoginActivity");
    //capabilities.setCapability("app-wait-activity","LoginActivity,NewAccountActivity");
    driver = new RemoteWebDriver(new URL("http://127.0.0.1:4723/wd/hub"), capabilities);
    driver.manage().timeouts().implicitlyWait(80, TimeUnit.SECONDS);

    }

    @Test
    public void loginTest() throws Exception
    {
    System.out.println("Inside Test Function");
    driver.findElement(By.xpath("//EditText[@text='Email Address']")).sendKeys("tester@gmail.com");
    driver.findElement(By.xpath("//LinearLayout/EditText[2]")).sendKeys("Testerpwd");
    driver.findElement(By.xpath("//CheckBox")).click();
    driver.findElement(By.xpath("//Button[@text='Login']")).click();

    WebDriverWait wait = new WebDriverWait(driver,80);
    wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//Button[@text='Logout']")));
    driver.findElement(By.xpath("//Button[@text='Logout']")).click();

    }

    @After
    public void tearDown()
    {
    driver.quit();
    }

    }


    ------------------------------------------------------------------------------------------------------------------------------
    Error which was shown in my console:
    Error :org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
    Build info: version: '2.25.0', revision: '17482', time: '2012-07-18 21:09:54'
    System info: os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_51'
    Driver info: driver.version: RemoteWebDriver
    Reply
    nishanth ravi13 February 2014 at 18:35

    Hi,

    i have tried the following steps which u have mentioned above in your post.But still i cant able to run the file.

    In my scenario i have tested with JUnit framework.


    Code:


    import java.io.File;
    import java.net.MalformedURLException;
    import java.net.URL;
    import java.util.concurrent.TimeUnit;

    import org.junit.After;
    import org.junit.Before;
    import org.junit.Test;
    import org.openqa.selenium.By;
    import org.openqa.selenium.WebDriver;
    import org.openqa.selenium.remote.CapabilityType;
    import org.openqa.selenium.remote.DesiredCapabilities;
    import org.openqa.selenium.remote.RemoteWebDriver;
    import org.openqa.selenium.support.ui.ExpectedConditions;
    import org.openqa.selenium.support.ui.WebDriverWait;

    public class androidExample {


    WebDriver driver = null;

    @Before
    public void setup() throws Exception{
    File appDir = new File("D:\\apk\\");
    File app = new File(appDir, "Flipkart.apk");
    DesiredCapabilities capabilities = new DesiredCapabilities();
    capabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);
    capabilities.setCapability("device","Android");
    //capabilities.setCapability(CapabilityType.BROWSER_NAME, "Android");
    capabilities.setCapability("device ID", "emulator-5554");
    capabilities.setCapability(CapabilityType.VERSION, "4.2.2");
    capabilities.setCapability(CapabilityType.PLATFORM, "WINDOWS");
    capabilities.setCapability("app", app.getAbsolutePath()); //app.getAbsolutePath()
    // Here we mention the app's package name, to find the package name we have to convert .apk file into java class files
    capabilities.setCapability("app-package","com.flipkart.android");
    //Here we mention the activity name, which is invoked initially as app's first page.
    capabilities.setCapability("app-activity","LoginActivity");
    //capabilities.setCapability("app-wait-activity","LoginActivity,NewAccountActivity");
    driver = new RemoteWebDriver(new URL("http://127.0.0.1:4723/wd/hub"), capabilities);
    driver.manage().timeouts().implicitlyWait(80, TimeUnit.SECONDS);

    }

    @Test
    public void loginTest() throws Exception
    {
    System.out.println("Inside Test Function");
    driver.findElement(By.xpath("//EditText[@text='Email Address']")).sendKeys("tester@gmail.com");
    driver.findElement(By.xpath("//LinearLayout/EditText[2]")).sendKeys("Testerpwd");
    driver.findElement(By.xpath("//CheckBox")).click();
    driver.findElement(By.xpath("//Button[@text='Login']")).click();

    WebDriverWait wait = new WebDriverWait(driver,80);
    wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//Button[@text='Logout']")));
    driver.findElement(By.xpath("//Button[@text='Logout']")).click();

    }

    @After
    public void tearDown()
    {
    driver.quit();
    }

    }


    ------------------------------------------------------------------------------------------------------------------------------
    Error which was shown in my console:
    Error :org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
    Build info: version: '2.25.0', revision: '17482', time: '2012-07-18 21:09:54'
    System info: os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_51'
    Driver info: driver.version: RemoteWebDriver
    Reply
    Replies
        Admin15 February 2014 at 00:07

        add single . before main activity class as below:

        capabilities.setCapability("app-activity",".LoginActivity");

        Also make sure your Appium server host url is same with configured in script
        Reply
    Ashish Gupta5 April 2014 at 01:36

    First of all I would like to thanks you for this article. I have gone through each steps and executed test.
    Reply
    Anonymous18 April 2014 at 13:24

    what if my device is connected to remote machine and i have to execute script from my machine? will it work? if not what will be the reason>
    Reply
    Shri7 August 2014 at 21:07

    Thanks for detailed post. I have used the same code for Demo1.apk.
    But got following error:
    FAILED CONFIGURATION: @BeforeMethod setUp
    org.openqa.selenium.remotae.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.

    Can you pl. help me to sort out this.(Pl. note: Also I have downloaded latest Appium, which has bit different UI)
    Reply
    manivannan thirunavukkarasu24 September 2014 at 15:47

    Hi, I have following questions.
    1.Which line of code should modify to choose demo application from monkey talk.
    2.I hit this url "http://127.0.0.1:4723/wd/hub" in website. I got this message "That URL did not map to a valid JSONWP resource"

    I don't know where i went wrong. Kindly reply ASAP
    Reply
    Replies
        Admin24 September 2014 at 16:31

        HI manivannan,

        Are you looking sample demo.apk file, If yes I have downloaded this from monkeytalk package.You can try from your apk file, but if you are looking for same then download from monkeytalk ide you will get sample application from there.

        Thanks,
        Admin
        Reply
    Priyanka Agarwal26 September 2014 at 13:37

    Hi ,
    I am doing ioS Mobile automation testing for Native application.
    Can anyone tell me when to use CapabilityType.SUPPORT_ALERTS while setting the capabilities for driver object .And what parameters does it take.
    Reply
    manivannan thirunavukkarasu30 September 2014 at 12:57

    Hi,
    I have doubt in this line
    driver = new RemoteWebDriver(new URL("http://127.0.0.1:4723/wd/hub"), capabilities);
    What URL we need to give here..Could you explain please.
    Reply
    Replies
        Admin30 September 2014 at 21:09

        This is default url of appium server, Check your appium server address, Also check your appium server is running in same machine or not
        Reply
    manivannan thirunavukkarasu30 September 2014 at 19:17

    Hi
    i am using appium 1.2.3.1 and using monkey talk apk to run the test.
    But while running the test script, i got error message.
    Console:

    FAILED CONFIGURATION: @BeforeMethod setUp
    org.openqa.selenium.SessionNotCreatedException: A new session could not be created. (Original error: The following desired capabilities are required, but were not provided: platformName, deviceName) (WARNING: The server did not provide any stacktrace information)
    Command duration or timeout: 274 milliseconds
    Build info: version: '2.42.2', revision: '6a6995d', time: '2014-06-03 17:42:30'
    System info: host: 'TestingServer', ip: '192.168.1.150', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.6.0_17'
    Driver info: org.openqa.selenium.remote.RemoteWebDriver
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)


    Appium Server :
    > info: [37m--> [39m [37mPOST [39m [37m/wd/hub/session [39m [90m{"desiredCapabilities":{"platform":"WINDOW","app":"D:\\Apk\\com.gorillalogic.monkeytalk.demo1.apk","browserName":"","app-package":"com.gorillalogic.monkeytalk.demo1","device":"Android","app-activity":".RootActivity","version":"4.4"}} [39m
    > error: The following desired capabilities are required, but were not provided: platformName, deviceName
    > info: [debug] Got configuration error, not starting session
    > info: [debug] Cleaning up appium session
    > info: [debug] Error: The following desired capabilities are required, but were not provided: platformName, deviceName
    > at Capabilities.checkValidity (E:\Appium\node_modules\appium\lib\server\capabilities.js:139:13)
    > at Appium.configure (E:\Appium\node_modules\appium\lib\appium.js:261:35)
    > at Appium.start (E:\Appium\node_modules\appium\lib\appium.js:105:10)
    > error: Failed to start an Appium session, err was: Error: The following desired capabilities are required, but were not provided: platformName, deviceName
    > at Object.exports.createSession [as handle] (E:\Appium\node_modules\appium\lib\server\controller.js:179:16)
    > at next_layer (E:\Appium\node_modules\appium\node_modules\express\lib\router\route.js:113:13)
    > at Route.dispatch (E:\Appium\node_modules\appium\node_modules\express\lib\router\route.js:117:5)
    > at E:\Appium\node_modules\appium\node_modules\express\lib\router\index.js:222:24
    > at Function.proto.process_params (E:\Appium\node_modules\appium\node_modules\express\lib\router\index.js:288:12)
    > at next (E:\Appium\node_modules\appium\node_modules\express\lib\router\index.js:216:19)
    > at next (E:\Appium\node_modules\appium\node_modules\express\lib\router\index.js:180:38)
    > info: [debug] Responding to client with error: {"status":33,"value":{"message":"A new session could not be created. (Original error: The following desired capabilities are required, but were not provided: platformName, deviceName)","origValue":"The following desired capabilities are required, but were not provided: platformName, deviceName"},"sessionId":null}
    > info: [37m<-- POST /wd/hub/session [39m [31m500 [39m [90m 15.380 ms - 314 [39m [90m [39m

    Am trying on last 2 weeks . Please reply ASAP.

    Reply
    Khan Imran10 November 2014 at 13:02


    I want to press done button in android key board please can anyone help me. i am using selenium webdriver and Appium. ﻿
    Reply
    NGOWDA UNILOG16 December 2014 at 17:59

    Hi,
    i am installed all files, but am unable to run the script..
    below are the error..
    Starting Node Server
    > usage: main.js [-h] [-v] [--shell] [--app APP] [--ipa IPA] [-q] [-U UDID]
    > [-a ADDRESS] [-p PORT] [-bp BOOTSTRAPPORT] [-k]
    > [-r BACKENDRETRIES] [--session-override] [--full-reset]
    > [--no-reset] [-l] [-lt LAUNCHTIMEOUT] [-g LOG]
    > [--log-timestamp] [--log-no-colors] [-G WEBHOOK]
    > [--native-instruments-lib] [--force-quit-instruments]
    > [--app-pkg ANDROIDPACKAGE] [--app-activity ANDROIDACTIVITY]
    > [--app-wait-package ANDROIDWAITPACKAGE]
    > [--app-wait-activity ANDROIDWAITACTIVITY]
    > [--android-coverage ANDROIDCOVERAGE] [--avd AVD]
    > [--avd-args AVDARGS]
    > [--device-ready-timeout ANDROIDDEVICEREADYTIMEOUT] [--safari]
    > [--device-name DEVICENAME] [--platform-name PLATFORMNAME]
    > [--platform-version PLATFORMVERSION]
    > [--automation-name AUTOMATIONNAME] [--browser-name BROWSERNAME]
    > [--default-device] [--force-iphone] [--force-ipad]
    > [--language LANGUAGE] [--locale LOCALE]
    > [--calendar-format CALENDARFORMAT] [--orientation ORIENTATION]
    > [--tracetemplate AUTOMATIONTRACETEMPLATEPATH] [--show-sim-log]
    > [--nodeconfig NODECONFIG] [-ra ROBOTADDRESS] [-rp ROBOTPORT]
    > [--selendroid-port SELENDROIDPORT]
    > [--chromedriver-port CHROMEDRIVERPORT] [--use-keystore]
    > [--keystore-path KEYSTOREPATH]
    > [--keystore-password KEYSTOREPASSWORD] [--key-alias KEYALIAS]
    > [--key-password KEYPASSWORD] [--show-config]
    > [--command-timeout DEFAULTCOMMANDTIMEOUT] [--keep-keychains]
    >
    >
    > ERROR:
    > Node Server Process Ended
    Reply
    NGOWDA UNILOG16 December 2014 at 20:41

    I am unable to resolve the error please help me

    FAILED CONFIGURATION: @BeforeMethod setUp
    java.lang.IllegalArgumentException: No enum constant org.openqa.selenium.Platform.WINDOWS 7
    at java.lang.Enum.valueOf(Unknown Source)
    at org.openqa.selenium.Platform.valueOf(Platform.java:1)
    at org.openqa.selenium.remote.DesiredCapabilities.setCapability(DesiredCapabilities.java:168)
    at test.java.com.saucelabs.appium.login.setUp(login.java:34)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
    at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
    at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
    at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
    at org.testng.TestRunner.privateRun(TestRunner.java:767)
    at org.testng.TestRunner.run(TestRunner.java:617)
    at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
    at org.testng.SuiteRunner.run(SuiteRunner.java:240)
    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
    at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
    at org.testng.TestNG.run(TestNG.java:1057)
    at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
    at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
    at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)

    SKIPPED CONFIGURATION: @AfterMethod tearDown
    SKIPPED CONFIGURATION: @BeforeMethod setUp
    SKIPPED CONFIGURATION: @AfterMethod tearDown
    SKIPPED: formTest
    SKIPPED: loginTest

    ===============================================
    Default test
    Tests run: 2, Failures: 0, Skips: 2
    Configuration Failures: 1, Skips: 3
    ===============================================


    ===============================================
    Default suite
    Total tests run: 2, Failures: 0, Skips: 2
    Configuration Failures: 1, Skips: 3
    ===============================================

    [TestNG] Time taken by org.testng.reporters.SuiteHTMLReporter@7fbcac12: 89 ms
    [TestNG] Time taken by org.testng.reporters.XMLReporter@66e136be: 12 ms
    [TestNG] Time taken by [FailedReporter passed=0 failed=0 skipped=0]: 13 ms
    [TestNG] Time taken by org.testng.reporters.EmailableReporter2@2004916b: 9 ms
    [TestNG] Time taken by org.testng.reporters.JUnitReportReporter@5043cc83: 15 ms
    [TestNG] Time taken by org.testng.reporters.jq.Main@6eb04214: 42 ms
    Reply

Load more...

Leave your comments, queries, suggestion I will try to provide solution

Newer Post Older Post Home
Subscribe to: Post Comments (Atom)
Search This Blog
	
Followers
Blog Archive

    ►  2015 (6)

    ▼  2014 (35)
        ►  December (2)
        ►  November (2)
        ►  October (1)
        ►  September (2)
        ►  August (3)
        ►  July (3)
        ►  June (2)
        ►  May (6)
        ►  April (4)
        ►  March (4)
        ▼  February (3)
            Road to setup git repository with Jenkins
            Road to setup and create first Appium Webdriver an...
            Road to find android application element details u...
        ►  January (3)

    ►  2013 (106)

Facebook Badge
Road To Automation

Total Pageviews
412,481
	
Labels
Android Ant API Appium AutoIt BDD Calabash CircleCI Codeception Git Java Jenkins/Hudson Jmeter Junit Maven MonkeyTalk NUnit Others PHP Robotium Selendroid Selenium Sikuli SoapUI TestNG Watir WebDriver
Recent Comments

    and the same file, package com.bobcares.webdrive... - 11.03.2015 - Shari Das
    Hello, I used the same script. but getting error ... - 11.03.2015 - Shari Das
    testlink.api.java.client.TestLinkAPIException: Una... - 11.03.2015 - mangesh
    How to get Response XML ?? my code is like this @T... - 09.03.2015 - rajesh Mondal
    My testng results for a Data Driven test shows all... - 24.02.2015 - Chandra

Popular Posts

    Webdriver (Selenium ) Interview Questions and answers
    Question 1: What is Selenium 2.0 Answer: Webdriver is open source automation tool for web application. WebDriver is designed to provide ...
    Road to setup and create first Appium Webdriver android script in Java
    About Appium: Appium is open source automation tool for iOS and android application supported by Sauce Lab. It is cross platform, supporte...
    Webdriver implicit and explicit wait for element locator.
    Today most of web application using Ajax, When page is load some element load in a different time of interval or some time request send wit...
    Screen Recording (Video) of Java Webdriver script
    Sauce lab provided screen capturing functionality to test scripts execution, I was looking same type functionality to work on local machine...
    How to install and setup Testlink on window machine?
    Perquisite: Download and install xampp application into your machine from link: "http://www.apachefriends.org/en/xampp-windows.html&...
    Road to verify PDF file text using java webdriver
    In this post I will explain the procedure to verify PDF file content using java webdriver. As  some time we need to verify content of web a...
    Data driven testing using java webdriver TestNg framework
    In this post I implemented that how to perform data driven testing using java Webdriver  TestNg framework. As we know testNg provide @DataP...
    Java WebDriver BDD framework using Cucumber-JVM
    In this post I will show you how to create BDD framework in webdriver selenium using cucumber-jvm. Cucumber –JVM is based on cucumber frame...
    Road to verify images using java webdriver
    In this post I have explained that how to verify images in webdriver using java. As webdriver does not provide direct any function to image...
    Road to data driven testing in webdriver java TestNg Part 1
    In this post I am going to see you, how to perform data driven testing in java webdriver. In this post I read data from external excel file...

	
Picture Window template. Powered by Blogger.
